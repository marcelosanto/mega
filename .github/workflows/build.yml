name: Build and Release Lottery Generator

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04 # Voltamos para 22.04 LTS para maior estabilidade
            platform: linux
            artifact-name: loteria-gerador-linux
          - os: windows-2022
            platform: windows
            artifact-name: loteria-gerador.exe

    runs-on: ${{ matrix.os }}
    env:
      PYTHONUTF8: "1"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-22.04'
        run: sudo apt-get update && sudo apt-get install -y libwebkit2gtk-4.0-dev

      - name: Install Poetry
        run: pip install poetry

      - name: Install project dependencies
        run: poetry install --no-root

      # --- ETAPA DE BUILD SIMPLIFICADA USANDO O ARQUIVO .spec ---
      - name: Build executable with PyInstaller
        shell: bash
        run: |
          # Agora, simplesmente executamos o PyInstaller no arquivo .spec
          poetry run pyinstaller loteria-gerador.spec --noconfirm

          # Passo extra para Linux: Renomeia o arquivo gerado
          if [[ "${{ matrix.os }}" == "ubuntu-22.04" ]]; then
            echo "Renaming Linux executable..."
            mv dist/loteria-gerador dist/loteria-gerador-linux
          fi

      - name: List build output
        run: ls -R dist

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-build
          path: dist/${{ matrix.artifact-name }}

  release:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/

      - name: Display structure of downloaded files
        run: ls -R dist

      - name: Create and Upload Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v1.0.${{ github.run_number }}
          name: Release v1.0.${{ github.run_number }}
          body: "Automated release with builds for Linux and Windows."
          draft: false
          prerelease: false
          files: |
            dist/linux-build/loteria-gerador-linux
            dist/windows-build/loteria-gerador.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}